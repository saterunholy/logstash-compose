#input{
#    kafka {
#        codec => "json"
#        bootstrap_servers => "ip-172-31-2-190.ec2.internal:9092"
#        topics => ["CheckmkMetrics"]
#        id => "CheckMK-Kafka-Lgsth"
#  }
#}

input{
    kafka {
        codec => "json"
        bootstrap_servers => "b-2.kafka-logstash.iqp5ck.c16.kafka.us-east-1.amazonaws.com:9092, b-1.kafka-logstash.iqp5ck.c16.kafka.us-east-1.amazonaws.com:9092"
        topics => ["check_mk"]
        id => "CheckMK-Kafka-Logsth"
  }
}

filter {
#        if [datasource] == "checkmk" {
                 mutate {
#                        replace => { "host.ip" => "%{host.ip}" }
#                        replace => { "system.cpu.usage.pct" => "%{cpu.utilization.user}" }
#                        replace => { "system.memory.actual.used.pct" => "%{memory.ram.used}" }
#                        replace => { "system.filesystem.used.pct" => "%{fs.used.pct}" }
                        rename => { "network.interface.in.bw" => "system.network.interface.in" }
#                        replace => { "system.cpu.system.pct" => "%{cpu.utilization.system}" }
#                        replace => { "system.fsstat.total_size.total.number" => "%{fs.size}" }
#                        replace => { "system.memory.total.number" => "%{memory.ram.total}" }
#                        replace => { "system.fsstat.total_size.used.number" => "%{fs.used.size}" }
                }
#        }
}

#output
#{
#    elasticsearch {
#        id => "CheckMK-Kafka-Elas"
#        cloud_id => "QA:dXMtZWFzdC0xLmF3cy5mb3VuZC5pbyRiYmE4ZmZjY2NlZWI0ODQ4YTg3ODA5MTNhOTdmMmM4ZiQxYjRlMTQ4OTRjMTY0ZjZhOTE4YTYxMDdjZTIyYzJjNw=="
#        cloud_auth => "logstash_internal:Y3A12v9mMuX40jCVAbovi5MsH"
#        index => "alias_write_checkmk"
#    }
#}

output {
        stdout {
                codec => rubydebug
        }
        #elasticsearch {
        #}
}
